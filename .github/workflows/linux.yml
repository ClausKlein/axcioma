name: linux

on:
  push:
    branches:
      - master
      - develop
      - v*
    tags:
      - AXCIOMA-v*
  pull_request:
    branches:
      - master
      - develop
      - v*
  schedule:
    - cron: '0 1 * * SUN'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  DOC_ROOT: ${{ github.workspace }}/ACE_TAO
  ACE_ROOT: ${{ github.workspace }}/ACE_TAO/ACE
  MPC_ROOT: ${{ github.workspace }}/ACE_TAO/MPC
  TAO_ROOT: ${{ github.workspace }}/ACE_TAO/TAO
  X11_BASE_ROOT: ${{ github.workspace }}
  RIDL_ROOT: ${{ github.workspace }}/ridl
  TAOX11_ROOT: ${{ github.workspace }}/taox11
  X11_BRANCH: master
  ACETAOMPC_BRANCH: ACE+TAO-8_0_5

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            CC: gcc-13
            CXX: g++-13
            ruby: '3.2'
            PackageDeps: g++-13
          # - os: ubuntu-24.04
          #   CC: gcc-15
          #   CXX: g++-15
          #   ruby: '3.4'
          #   PackageDeps: g++-15
          - os: ubuntu-22.04
            CC: gcc-12
            CXX: g++-12
            ruby: '3.1'
            PackageDeps: g++-12
          - os: ubuntu-24.04
            CC: gcc-13
            CXX: g++-13
            ruby: '3.2'
            PackageDeps: g++-13
          - os: ubuntu-24.04
            CC: clang-17
            CXX: clang++-17
            ruby: '3.3'
            PackageDeps: clang-17
          - os: ubuntu-24.04
            CC: clang-20
            CXX: clang++-20
            ruby: '3.4'
            PackageDeps: clang-20
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} ${{ matrix.CXX }} ruby-${{ matrix.ruby }}
    env:
      CC: ${{ matrix.CC }}
      CXX: ${{ matrix.CXX }}
    steps:
    - if: contains(fromJson('["pull_request", "pull_request_target"]'), github.event_name) && github.repository_owner == 'RemedyIT'
      run: |
        echo "X11_BRANCH=${{ github.base_ref }}" >> $GITHUB_ENV
    - if: contains(fromJson('["pull_request", "pull_request_target"]'), github.event_name) == false && github.repository_owner == 'RemedyIT'
      run: |
        echo "X11_BRANCH=${{ github.ref_name }}" >> $GITHUB_ENV
    - uses: actions/checkout@v5
    - name: checkout ACE_TAO
      uses: actions/checkout@v5
      with:
        repository: DOCGroup/ACE_TAO
        path: ${{ env.DOC_ROOT }}
        ref: ${{ env.ACETAOMPC_BRANCH }}
    - name: checkout MPC
      uses: actions/checkout@v5
      with:
        repository: DOCGroup/MPC
        path: ${{ env.MPC_ROOT }}
        ref: ${{ env.ACETAOMPC_BRANCH }}
    - name: checkout ridl
      uses: actions/checkout@v5
      with:
        repository: RemedyIT/ridl
        path: ${{ env.RIDL_ROOT }}
        ref: ${{ env.X11_BRANCH }}
    - name: checkout taox11
      uses: actions/checkout@v5
      with:
        repository: RemedyIT/taox11
        path: ${{ env.TAOX11_ROOT }}
        ref: ${{ env.X11_BRANCH }}
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
    - name: Add repository ${{ matrix.Repo }}
      if: matrix.Repo != ''
      run:
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
        sudo apt-add-repository "deb http://apt.llvm.org/$(lsb_release -cs)/ ${{ matrix.Repo }} main"
    - name: Add packages
      run: |
        sudo apt-get --yes update
        sudo apt-get --yes install libxerces-c-dev libssl-dev libzmq3-dev ${{ matrix.PackageDeps }}
    - name: Run brix11 configure
      run: |
        $X11_BASE_ROOT/bin/brix11 configure -W aceroot=$ACE_ROOT -W taoroot=$TAO_ROOT -W mpcroot=$MPC_ROOT
    - name: Print brix11 configuration
      run: |
        $X11_BASE_ROOT/bin/brix11 env -- configure -P
    - name: Run brix11 gen build
      run: |
        $X11_BASE_ROOT/bin/brix11 gen build workspace.mwc -- gen build $TAOX11_ROOT/examples -- gen build $TAOX11_ROOT/orbsvcs/tests -- gen build $TAOX11_ROOT/tests
    - name: Run brix11 make
      run: |
        $X11_BASE_ROOT/bin/brix11 make -N $X11_BASE_ROOT -- make -N $TAOX11_ROOT/examples -- make -N $TAOX11_ROOT/orbsvcs/tests -- make -N $TAOX11_ROOT/tests
    - name: Install necessary ruby gems
      run: |
        gem install asciidoctor:2.0.15 coderay
    - name: Run brix11 generate documentation
      run: |
        $X11_BASE_ROOT/bin/brix11 generate documentation
    - name: Check documentation file existence
      id: check_files
      uses: andstor/file-existence-action@v3
      with:
        files: "docs/html/taox11/getting_started.html"
    - name: File exists
      if: steps.check_files.outputs.files_exists == 'false'
      uses: actions/github-script@v8
      with:
        script: |
          core.setFailed('Documentation not generated')
